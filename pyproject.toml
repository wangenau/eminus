# SPDX-FileCopyrightText: 2023 The eminus developers
# SPDX-License-Identifier: Apache-2.0
##### Build backend #####
[build-system]
requires = ["hatchling>=1.27"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
only-include = ["eminus", "tests"]

##### Metadata #####
[project]
name = "eminus"
version = "3.0.3"
dependencies = ["numpy>=1.17.3", "scipy>=1.6"]
requires-python = ">=3.8"
authors = [{name = "Wanja Timm Schulze", email = "wangenau@protonmail.com"}]
description = "Pythonic electronic structure theory."
readme = "README.md"
license = "Apache-2.0"
license-files = ["LICENSE"]
keywords = ["density-functional-theory", "electronic-structure", "education", "python"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Education",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Software Development",
    "Typing :: Typed",
]

[project.urls]
source = "https://gitlab.com/wangenau/eminus"
changelog = "https://wangenau.gitlab.io/eminus/changelog.html"
documentation = "https://wangenau.gitlab.io/eminus"
issues = "https://gitlab.com/wangenau/eminus/-/issues"

[project.optional-dependencies]
d3 = ["dftd3>=0.6"]  # Interface for DFT-D3 dispersion corrections
gui = [
    "nglview>=2.6.5",  # Molecule viewer
    "plotly>=4.5",  # Various visualizations
]
hdf5 = ["h5py>=2.9"]  # HDF5 file reading and writing
jax = ["jax>=0.4.8"]  # Faster FFT operators
libxc = ["pyscf>=2.1"]  # Libxc interface using PySCF
torch = ["torch>=1.8"]  # Faster FFT operators
fods = ["eminus[libxc]"]  # PyCOM FOD guessing method uses PySCF
all = ["eminus[d3]", "eminus[gui]", "eminus[hdf5]", "eminus[libxc]", "eminus[torch]"]

[dependency-groups]
dev = [
    "furo>=2024.08.06; python_version>='3.10'",  # Documentation theme
    "matplotlib>=3.6.2",  # Plotting library for images in examples
    "mypy>=1.16; python_version>='3.10'",  # Static type checker
    "pytest>=7",  # Test utilities
    "ruff>=0.10",  # Linter and formatter
    "sphinx>=8.1; python_version>='3.10'",  # Documentation builder
    "sphinx-design>=0.6.1; python_version>='3.10'",  # More directives for Sphinx
    "sphinxcontrib-bibtex>=2.1; python_version>='3.10'",  # Use bib files for citations in Sphinx
]

##### Mypy #####
[tool.mypy]
python_version = "3.13"
strict = true
disable_error_code = ["import-untyped"]  # Module is missing library stubs or py.typed marker

[[tool.mypy.overrides]]
module = "tests.*"
disable_error_code = ["no-untyped-def"]  # Function is missing a type annotation

##### Pytest #####
[tool.pytest.ini_options]
addopts = ["-rsxX", "--strict-config", "--strict-markers"]
markers = ["slow: test runs longer than five seconds."]

##### Ruff #####
[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "E741", "E743",  # Ambiguous variable or function names
    "N802", "N803", "N806",  # Function, argument, or variable names in function should be lowercase
    "ANN",  # flake8-annotations
    "FBT001", "FBT002",  # Boolean (default) positional argument in function definition
    "SLF001",  # Private member accessed
    "SIM108",  # Use ternary operator instead of if-else-block
    "PTH123",  # open() should be replaced by Path.open()
    "ERA001",  # Found commented-out code
    "PLR0911", "PLR0912", "PLR0913", "PLR0915",  # "Too many" rules
    "PLR2004", # Magic value used in comparison
    "COM812",  # Trailing comma missing (disabled due to possible conflicts with the formatter)
]

[tool.ruff.lint.per-file-ignores]
"docs/*" = ["INP001"]  # File is part of an implicit namespace package
"examples/*" = [
    "D100", "D103",  # Missing docstring in public module or function
    "E501",  # Line too long
    "INP001",  # File is part of an implicit namespace package
    "T201",  # print found
]
"tests/*" = [
    "S101",  # Use of assert detected
    "INP001",  # File is part of an implicit namespace package
    "T201",  # print found
    "PTH107",  # os.remove() should be replaced by Path.unlink()
]

[tool.ruff.lint.flake8-unused-arguments]
ignore-variadic-names = true

[tool.ruff.lint.isort]
order-by-type = false

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.pydocstyle]
convention = "google"
